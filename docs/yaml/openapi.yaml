openapi: 3.0.0
info:
    description: Working Day Service
    title: Working Day Service
    version: '1.0'
    
servers:
  - url: http://84.201.137.230:8080
    description: production
    
paths:
    /v1/employees:
        get:
            description: Get list of employees
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            responses:
                '200':
                    description: Employee information
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmployeesResponse'
                    
    /v1/employee/add:
        post:
            description: Add new employee
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EmployeeAddRequest'
            responses:
                '200':
                    description: Login information
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginInfo'

    /v1/employee/add-head:
        post:
            description: Add head of the employee
            parameters:
              - in: query
                name: employee_id
                description: Id of the employee to add head to
                schema:
                    type: string
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EmployeeAddHeadRequest'
            responses:
                '200':
                    description: Head was added
                            

    /v1/employee/remove:
        post:
            description: Remove new employee
            parameters:
              - in: query
                name: employee_id
                description: Id of the employee to remove
                schema:
                    type: string
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            responses:
                '200':
                    description: Employee was removed

    /v1/employee/info:
        get:
            description: Get employee info
            parameters:
              - in: query
                name: employee_id
                description: Id of the employee to check
                schema:
                    type: string
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            responses:
                '200':
                    description: Employee information
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Employee'
                # Applies for all handlers with authorization header
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'
                # Applies for all handlers with authorization header
                '403':
                    description: Wrong authorization token
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'
                '404':
                    description: Not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

    /v1/profile/upload-photo:
        post:
            description: Upload personal photo
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            responses:
                '200':
                    description: Upload link
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UploadPhotoResponse'

    /v1/profile/edit:
        post:
            description: Edit personal information
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProfileEditRequest'
            responses:
                '200':
                    description: Information was updated

    /v1/authorize:
        post:
            description: Authorize user
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AuthorizeRequest'
            responses:
                '200':
                    description: Authorized successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AuthorizeResponse'
                '404':
                    description: Not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

    /v1/notifications:
        post:
            description: Get list of notifications
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/NotificationsRequest'
            responses:
                '200':
                    description: List of notifications
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotificationsResponse'

    /v1/actions:
        post:
            description: Get list of user actions for a certain period
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ActionsRequest'
            responses:
                '200':
                    description: List of user actions
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActionsResponse'

    /v1/abscence/request:
        post:
            description: Request an abscence
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AbscenceRequestRequest'
            responses:
                '200':
                    description: Abscence was requested
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AbscenceRequestResponse'

    /v1/abscence/verdict:
        post:
            description: Approve or deny an abscence
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AbscenceVerdictRequest'
            responses:
                '200':
                    description: Verdict was sent

    /v1/abscence/split:
        post:
            description: Split an abscence
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AbscenceSplitRequest'
            responses:
                '200':
                    description: Abscence was split
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AbscenceSplitResponse'
                '400':
                    description: Wrong split date
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

    /v1/abscence/reschedule:
        post:
            description: Reschedule an abscence
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AbscenceRescheduleRequest'
            responses:
                '200':
                    description: Abscence was rescheduled
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AbscenceRescheduleResponse'

    /v1/documents/vacation:
        get:
            description: Generate vacation document
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
              - in: query
                name: action_id
                description: Id of vacation action
                schema:
                    type: string
              - in: query
                name: request_type
                description: Vacation request type
                schema:
                    type: string
                    enum:
                      - create
                      - split
            responses:
                '200':
                    description: Generated document download link
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DocumentsVacationResponse'
                '400':
                    description: Action type is not vacation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

    /v1/attendance/add:
        post:
            description: Add attendance hours for a certain employee
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
              - in: query
                name: employee_id
                description: Id of employee to add attendance for
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AttendanceAddRequest'
            responses:
                '200':
                    description: Attendance was added successfully

    /v1/payments/add-bulk:
        post:
            description: Add bulk payment updates
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PaymentsAddBulkRequest'
            responses:
                '200':
                    description: New payments were added successfully

    /v1/payments:
        get:
            description: Get employee's payments
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            responses:
                '200':
                    description: Payments for employee
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PaymentsResponse'

    /v1/clear-tasks:
        get:
            description: Clear the tasks queue
            responses:
                '200':
                    description: Tasks were cleared

    /v1/search/basic:
        post:
            description: Get employees by key
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SearchBasicRequest'
            responses:
                '200':
                    description: List of employees
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SearchResponse'
                                
    /v1/search/full:
        post:
            description: Get employees by multiple keys
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SearchFullRequest'
            responses:
                '200':
                    description: List of employees
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SearchResponse'

    /v1/search/suggest:
        post:
            description: Get employees suggestion by key
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SearchSuggestRequest'
            responses:
                '200':
                    description: List of employees
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SearchResponse'

    /v1/attendance/list-all:
        post:
            description: Get list of all employees' attendances for a given time period
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AttendanceListAllRequest'
            responses:
                '200':
                    description: List of attendances
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AttendanceListAllResponse'

    /v1/documents/upload:
        post:
            description: Upload document
            parameters:
              - in: header
                name: Authorization
                description: Token of session user, available for managers only
                schema:
                    type: string
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DocumentsUploadRequest'
            responses:
                '200':
                    description: Upload link
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UploadDocumentResponse'

    /v1/documents/send:
        post:
            description: Send document
            parameters:
              - in: header
                name: Authorization
                description: Token of session user, available for managers only
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DocumentSendRequest'
            responses:
                '200':
                    description: Document was sent

    /v1/documents/list:
        get:
            description: Get list of documents
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            responses:
                '200':
                    description: List of documents
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DocumentsListResponse'

    /v1/documents/download:
        get:
            description: Download document
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
              - in: query
                name: id
                description: Id of the document
                schema:
                    type: string
            responses:
                '200':
                    description: Download link
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DownloadDocumentResponse'

    /v1/documents/list-all:
        get:
            description: Get list of all existing documents
            parameters:
              - in: header
                name: Authorization
                description: Token of session user, available for managers only
                schema:
                    type: string
            responses:
                '200':
                    description: List of documents
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DocumentsListAllResponse'

    /v1/documents/get-signs:
        get:
            description: Get list of employees who signed the document
            parameters:
              - in: header
                name: Authorization
                description: Token of session user, available for managers only
                schema:
                    type: string
              - in: query
                name: document_id
                description: Id of the document
                schema:
                    type: string
            responses:
                '200':
                    description: List of employees
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DocumentsGetSignsResponse'
    
    /v1/documents/sign:
        post:
            description: Sign the document
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
              - in: query
                name: document_id
                description: Id of the document
                schema:
                    type: string
            responses:
                '200':
                    description: Document was signed

    /v1/superuser/company/add:
        post:
            description: Add new company
            parameters:
              - in: header
                name: Authorization
                description: Token of session user, available for superuser only
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SuperuserCompanyAddRequest'
            responses:
                '200':
                    description: Company was added

    /v1/inventory/add:
        post:
            description: Add new inventory item
            parameters:
              - in: header
                name: Authorization
                description: Token of session user, available for superuser only
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/InventoryAddRequest'
            responses:
                '200':
                    description: Inventory item was added

components:
    schemas:
        ErrorMessage:
            type: object
            additionalProperties: false
            required:
              - message
            properties:
                message:
                    type: string

        Timestamp:
            type: string
            description: Timestamp with the following format "%Y-%m-%dT%H:%M:%E6S" in UTC
            format: date-time

        ListEmployee:
            type: object
            additionalProperties: false
            required:
              - id
              - name
              - surname
            properties:
                id:
                    type: string
                name:
                    type: string
                surname:
                    type: string
                patronymic:
                    type: string
                photo_link:
                    type: string
                subcompany:
                    type: string

        EmployeesResponse:
            type: object
            additionalProperties: false
            required:
              - employees
            properties:
                employees:
                    type: array
                    items:
                        $ref: '#/components/schemas/ListEmployee'
                    
        EmployeeAddRequest:
            type: object
            additionalProperties: false
            required:
              - name
              - surname
              - role
            properties:
                name:
                    type: string
                surname:
                    type: string
                patronymic:
                    type: string
                role: 
                    $ref: '#/components/schemas/Role'
                company_id:
                    description: Company id of new employee. This field is available for superuser only
                    type: string
                    
        LoginInfo:
            type: object
            additionalProperties: false
            required:
                - login
                - password
            properties:
                login:
                    type: string
                password:
                    type: string

        EmployeeAddHeadRequest:
            type: object
            additionalProperties: false
            required:
              - head_id
            properties:
                head_id:
                    type: string
        
        Employee:
            type: object
            additionalProperties: false
            required:
              - id
              - name
              - surname
            properties:
                id:
                    type: string
                name:
                    type: string
                surname:
                    type: string
                patronymic:
                    type: string
                phones:
                    type: array
                    items:
                        type: string
                email:
                    type: string
                birthday:
                    type: string
                photo_link:
                    type: string
                password:
                    type: string
                head_id:
                    type: string
                telegram_id:
                    type: string
                vk_id:
                    type: string
                team:
                    type: string
                inventory:
                    type: array
                    items:
                        $ref: '#/components/schemas/InventoryItem'

        ProfileEditRequest:
            type: object
            additionalProperties: false
            properties:
                phones:
                    type: array
                    items:
                        type: string
                email:
                    type: string
                birthday:
                    type: string
                password:
                    type: string
                telegram_id:
                    type: string
                vk_id:
                    type: string
                team:
                    type: string
        
        AuthorizeRequest:
            type: object
            additionalProperties: false
            required:
              - login
              - password
              - company_id
            properties:
                login:
                    type: string
                password:
                    type: string
                company_id:
                    type: string

        AuthorizeResponse:
            type: object
            additionalProperties: false
            required:
              - token
              - role
            properties:
                token:
                    type: string
                role:
                    $ref: '#/components/schemas/Role'

        NotificationsRequest:
            type: object
            additionalProperties: false
            properties:
                #Not supported yet
                earlier_than:
                    $ref: '#/components/schemas/Timestamp'
        NotificationsResponse:
            type: object
            additionalProperties: false
            required:
              - notifications
            properties:
                notifications:
                    type: array
                    items:
                        $ref: '#/components/schemas/Notification'

        Notification:
            type: object
            additionalProperties: false
            required:
              - id
              - type
              - is_read
              - text
              - created
              - action_id
            properties:
                id:
                    type: string
                type:
                    type: string
                    enum:
                      - vacation_request  # Vacation request from your employee
                      - vacation_approved # Head approved your vacation request
                      - vacation_denied   # Head denied your vacation request
                      - attendance_added  # Manager added your attendance
                      - generic           # Notification that doesn't require any action
                is_read:
                    type: boolean
                sender:
                    $ref: "#/components/schemas/ListEmployee"
                text:
                    type: string
                action_id:
                    type: string
                created:
                    type: string

        ActionsRequest:
            type: object
            additionalProperties: false
            required:
              - from
              - to
            properties:
                from:
                    $ref: '#/components/schemas/Timestamp'
                to:
                    $ref: '#/components/schemas/Timestamp'
                employee_id:
                    type: string
                    description: If head wants to watch employee's actions

        ActionsResponse:
            type: object
            additionalProperties: false
            required:
              - actions
            properties:
                actions:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserAction'

        UserAction:
            type: object
            additionalProperties: false
            required:
              - id
              - type
              - start_date
              - end_date
              - blocking_actions_ids
            properties:
                id:
                    type: string
                type:
                    type: string
                    enum:
                      - vacation
                      - attendance
                start_date:
                    $ref: '#/components/schemas/Timestamp'
                end_date:
                    $ref: '#/components/schemas/Timestamp'
                status:
                    type: string
                blocking_actions_ids:
                    type: array
                    items:
                        type: string

        AbscenceRequestRequest:
            type: object
            additionalProperties: false
            required:
              - start_date
              - end_date
              - type
            properties:
                start_date:
                    $ref: '#/components/schemas/Timestamp'
                end_date:
                    $ref: '#/components/schemas/Timestamp'
                type:
                    $ref: '#/components/schemas/AbscenceType'       
        
        AbscenceType:
            type: string
            enum:
                - vacation
                - sick_leave
                - unpaid_vacation
                - business_trip
                - overtime

        AbscenceRequestResponse:
            type: object
            additionalProperties: false
            required:
              - action_id
            properties:
                action_id:
                    type: string

        AbscenceVerdictRequest:
            type: object
            additionalProperties: false
            required:
              - action_id
              - approve
            properties:
                action_id:
                    type: string
                notification_id:
                    type: string
                approve:
                    type: boolean

        DocumentsVacationResponse:
            type: object
            additionalProperties: false
            required:
              - download_link
            properties:
                download_link:
                    type: string

        UploadPhotoResponse:
            type: object
            additionalProperties: false
            required:
              - url
            properties:
                url:
                    type: string
        
        Role:
            type: string
            enum:
              - user
              - admin
              - manager
              - robot

        AttendanceAddRequest:
            type: object
            additionalProperties: false
            required:
              - start_date
              - end_date
            properties:
                start_date:
                    $ref: '#/components/schemas/Timestamp'
                end_date:
                    $ref: '#/components/schemas/Timestamp'

        AbscenceSplitRequest:
            type: object
            additionalProperties: false
            required:
              - action_id
              - split_date
            properties:
                action_id:
                    type: string
                split_date:
                    $ref: '#/components/schemas/Timestamp'
        
        AbscenceSplitResponse:
            type: object
            additionalProperties: false
            required:
              - first_action_id
              - second_action_id
            properties:
                first_action_id:
                    type: string
                second_action_id:
                    type: string

        AbscenceRescheduleRequest:
            type: object
            additionalProperties: false
            required:
              - action_id
              - reschedule_date
            properties:
                action_id:
                    type: string
                reschedule_date:
                    $ref: '#/components/schemas/Timestamp'

        AbscenceRescheduleResponse:
            type: object
            additionalProperties: false
            required:
              - action_id
            properties:
                action_id:
                    type: string

        PaymentsAddBulkRequest:
            type: object
            additionalProperties: false
            required:
              - payments
            properties:
                payments:
                    type: array
                    items:
                        $ref: "#/components/schemas/Payment"
        
        Payment:
            type: object
            additionalProperties: false
            required:
              - id
              - user_id
              - amount
              - payroll_date
            properties:
                id:
                    type: string
                user_id:
                    type: string
                amount:
                    type: number
                payroll_date:
                    $ref: '#/components/schemas/Timestamp'

        PaymentsResponse:
            type: object
            additionalProperties: false
            required:
              - payments
            properties:
                payments:
                    type: array
                    items:
                        $ref: "#/components/schemas/Payment"

        SearchBasicRequest:
            type: object
            additionalProperties: false
            required:
              - search_key
            properties:
                search_key:
                    type: string

        SearchFullRequest:
            type: object
            additionalProperties: false
            required:
              - search_key
              - limit
            properties:
                search_key:
                    type: string
                limit:
                    type: integer

        SearchSuggestRequest:
            type: object
            additionalProperties: false
            required:
              - search_key
            properties:
                search_key:
                    type: string
                limit:
                    type: integer
            
        SearchResponse:
            type: object
            additionalProperties: false
            required:
              - employees
            properties:
                employees:
                    type: array
                    items:
                        $ref: '#/components/schemas/ListEmployee'

        AttendanceListAllRequest:
            type: object
            additionalProperties: false
            required:
              - from
              - to
            properties:
                from:
                    $ref: '#/components/schemas/Timestamp'
                to:
                    $ref: '#/components/schemas/Timestamp'

        AttendanceListAllResponse:
            type: object
            additionalProperties: false
            required:
              - attendances
            properties:
                attendances:
                    type: array
                    items:
                        $ref: '#/components/schemas/AttendanceListItem'

        AttendanceListItem:
            type: object
            additionalProperties: false
            required:
              - employee
            properties:
                employee:
                    $ref: '#/components/schemas/ListEmployee'
                start_date:
                    $ref: '#/components/schemas/Timestamp'
                end_date:
                    $ref: '#/components/schemas/Timestamp'
                    description: start_date and end_date should be in the same day
                abscence_type:
                    $ref: '#/components/schemas/AbscenceType'
                    description: If employee has an approved abscence for a given period

        UploadDocumentResponse:
            type: object
            additionalProperties: false
            required:
              - url
              - id
            properties:
                url:
                    type: string
                id:
                    type: string
                    description: Id to access the document

        DocumentSendRequest:
            type: object
            additionalProperties: false
            required:
              - document
              - employee_ids
            properties:
                document:
                    $ref: '#/components/schemas/DocumentItem'
                employee_ids:
                    description: List of employee ids to send the document to
                    type: array
                    items:
                        type: string
                is_salary_list:
                    type: boolean
                    description: True if document is salary list
                    default: false

        DocumentsListResponse:
            type: object
            additionalProperties: false
            required:
              - documents
            properties:
                documents:
                    type: array
                    items:
                        $ref: '#/components/schemas/DocumentItem'

        DocumentItem:
            type: object
            additionalProperties: false
            required:
              - id
              - name
            properties:
                id:
                    type: string
                name:
                    type: string
                type:
                    type: string
                    enum:
                      - employee_request
                      - admin_request
                sign_required:
                    type: boolean
                description:
                    type: string
                signed:
                    description: This field only valid if requested by assignee of the document
                    type: boolean
                parent_id:
                    description: Parent document Id
                    type: string

        DownloadDocumentResponse:
            type: object
            additionalProperties: false
            required:
              - url
            properties:
                url:
                    type: string

        DocumentsListAllResponse:
            type: object
            additionalProperties: false
            required:
              - documents
            properties:
                documents:
                    type: array
                    items:
                        $ref: '#/components/schemas/DocumentItem'

        SignItem:
            type: object
            additionalProperties: false
            required:
                - employee
                - signed
            properties:
                employee:
                    $ref: '#/components/schemas/ListEmployee'
                signed:
                    type: boolean

        DocumentsGetSignsResponse:
            type: object
            additionalProperties: false
            required:
              - signs
            properties:
                signs:
                    type: array
                    items:
                        $ref: '#/components/schemas/SignItem'
                        
        SuperuserCompanyAddRequest:
            type: object
            additionalProperties: false
            required:
              - company_id
              - company_name
            properties:
                company_id:
                    type: string
                company_name:
                    type: string

        DocumentsUploadRequest:
            type: object
            additionalProperties: false
            properties:
                extension:
                    type: string
                    description: File extension
                    enum:
                        - .pdf
                        - .xlsx
                    default: ".pdf"

        InventoryItem:
            type: object
            additionalProperties: false
            required:
              - name
            properties:
                name:
                    type: string
                description:
                    type: string
                id:
                    type: string

        InventoryAddRequest:
            type: object
            additionalProperties: false
            properties:
                item:
                    $ref: '#/components/schemas/InventoryItem'
                employee_id:
                    type: string
